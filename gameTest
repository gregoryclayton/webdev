<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
   
    <style>

       body {
        color: rgb(127, 127, 169);
        font-family: monospace;
        
       } 
    * { background-color: aliceblue;
        padding: 0; margin: 0; 
        } 
    canvas { 
        background: aliceblue; 
        display: block; 
        margin: 0 auto;
         }

    #butts {
      
        position:absolute;
        float: left;
        font-family: monospace;
        color: rgb(106, 97, 145);
        margin-left: 45%;
        margin-top: 120px;

    }
    
    #bottoms {
        position:absolute;
        float: left;
        font-family: monospace;
        color: rgb(106, 97, 145);
        margin-left: 45%;
        margin-top: 380px;

    }
    </style>
</head>
<body> 
    <div id="butts">simulating thought</div><div id="bottoms">simulating thought</div>

<canvas id="myCanvas" width="1000" height="500"></canvas>


<script>
    var canvas = document.getElementById("myCanvas");
    var ctx = canvas.getContext("2d");
    var ballRadius = 3;
    var x = canvas.width/2;
    var y = canvas.height-30;
    var dx = 2;
    var dy = -2;
    var paddleHeight = 5;
    var paddleWidth = 70;
    var paddleX = (canvas.width-paddleWidth)/2;
    var rightPressed = false;
    var leftPressed = false;
    var brickRowCount = 100;
    var brickColumnCount = 1;
    var brickWidth = 5;
    var brickHeight = 5;
    var brickPadding = 10;
    var brickOffsetTop = 250;
    var brickOffsetLeft = 10;
    var score = 0;
    var lives = [];
    var wordBank = ["head count","young self","sometimes I like","something with action","JERRI!","thanks pal","sirens horning","horny cows","juxtapose","cold repose","erratic shows","mac subs","rezzasentia","series finale","flippant regard","warner Bronx","marketing stratavarious","run away","mousing acclaim","lost in the scruffle","season 4","time will tell","mount crushmore","biggest monkey","seconds","the best impressionist","succeed","McDonald's break","shamless","forever soups","Lisa's Sax","Smooth butter","jazz"];
    var bricks = [];
    for(var c=0; c<brickColumnCount; c++) {
        bricks[c] = [];
        for(var r=0; r<brickRowCount; r++) {
            bricks[c][r] = { x: 0, y: 0, status: 1 };
        }
    }

    document.addEventListener("keydown", keyDownHandler, false);
    document.addEventListener("keyup", keyUpHandler, false);
    document.addEventListener("mousemove", mouseMoveHandler, false);

    function keyDownHandler(e) {
        if(e.keyCode == 39) {
            rightPressed = true;
        }
        else if(e.keyCode == 37) {
            leftPressed = true;
        }
    }
    function keyUpHandler(e) {
        if(e.keyCode == 39) {
            rightPressed = false;
        }
        else if(e.keyCode == 37) {
            leftPressed = false;
        }
    }
    function mouseMoveHandler(e) {
        var relativeX = e.clientX - canvas.offsetLeft;
        if(relativeX > 0 && relativeX < canvas.width) {
            paddleX = relativeX - paddleWidth/2;
        }
    }

    function newWords() {
        let word = document.getElementById("butts");
        let newword = wordBank[Math.floor(Math.random()*wordBank.length)];

        let word2 = document.getElementById("bottoms");
        let newword2 = wordBank[Math.floor(Math.random()*wordBank.length)];

        word.innerHTML = newword;
        word2.innerHTML = newword2;
    }


    function collisionDetection() {
        for(var c=0; c<brickColumnCount; c++) {
            for(var r=0; r<brickRowCount; r++) {
                var b = bricks[c][r];
                if(b.status == 1) {
                    if(x > b.x && x < b.x+brickWidth && y > b.y && y < b.y+brickHeight) {
                        dy = -dy;
                        b.status = 0;
                        score++;

                        newWords();

                        if(score == brickRowCount*brickColumnCount) {
                            alert("winnnnnnnner!");
                            document.location.reload();
                        }
                    }
                }
            }
        }
    }

    function drawBall() {
        ctx.beginPath();
        ctx.arc(x, y, ballRadius, 0, Math.PI*2);
        ctx.fillStyle = "#0095DD";
        ctx.fill();
        ctx.closePath();
    }
    function drawPaddle() {
        ctx.beginPath();
        ctx.rect(paddleX, canvas.height-paddleHeight, paddleWidth, paddleHeight);
        ctx.fillStyle = "#0095DD";
        ctx.fill();
        ctx.closePath();
    }

    function drawBricks() {
        for(var c=0; c<brickColumnCount; c++) {
            for(var r=0; r<brickRowCount; r++) {
                if(bricks[c][r].status == 1) {
                    var brickX = (r*(brickWidth+brickPadding))+brickOffsetLeft;
                    var brickY = (c*(brickHeight+brickPadding))+brickOffsetTop;
                    bricks[c][r].x = brickX;
                    bricks[c][r].y = brickY;
                    ctx.beginPath();
                    ctx.rect(brickX, brickY, brickWidth, brickHeight);
                    ctx.fillStyle = "#0095DD";
                    ctx.fill();
                    ctx.closePath();
                }
            }
        }
    }
    function drawScore() {
        ctx.font = "16px monospace";
        ctx.fillStyle = "#0095DD";
        ctx.fillText(" "+score, 8, 20);
    }
    function drawLives() {
        ctx.font = "16px monospace";
        ctx.fillStyle = "#0095DD";
        ctx.fillText(" "+lives, canvas.width-65, 20);
    }

    function draw() {
        ctx.clearRect(0, 0, canvas.width, canvas.height);
        drawBricks();
        drawBall();
        drawPaddle();
      
        collisionDetection();

        if(x + dx > canvas.width-ballRadius || x + dx < ballRadius) {
            dx = -dx;
        }
        if(y + dy < ballRadius) {
            dy = -dy;
        }
        else if(y + dy > canvas.height-ballRadius) {
            if(x > paddleX && x < paddleX + paddleWidth) {
                dy = -dy;
            }
            else {
                lives--;
                if(!lives) {
                    alert(" loser.");
                    document.location.reload();
                }
                else {
                    x = canvas.width/2;
                    y = canvas.height-30;
                    dx = 3;
                    dy = -3;
                    paddleX = (canvas.width-paddleWidth)/2;
                }
            }
        }

        if(rightPressed && paddleX < canvas.width-paddleWidth) {
            paddleX += 7;
        }
        else if(leftPressed && paddleX > 0) {
            paddleX -= 7;
        }

        x += dx;
        y += dy;
        requestAnimationFrame(draw);
    }

    draw();
</script>

</body>
</html>
